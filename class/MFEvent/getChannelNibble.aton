@@BEGIN:	FunctionDocumentation
@CLASSNAME:	MFEvent
@METHOD:	getChannelNibble
@ACCESS:	public
@RETURN:	int
@PARAMETERS:	void
@FILE:		MidiFile.cpp
@LINES:		272-299
@SEEALSO:	
@SHORTDESC:	Return channel number of the MIDI command byte (offset from 0).
@LONGDESC:	Return the bottom 4 bits of the command byte for the 
		MIDI message.

@@BEGIN: EXAMPLE
@DESCRIPTION:
@CODE:
@OUTPUT:
@@END:	EXAMPLE

@SRCCODE:

//////////////////////////////
//
// MFEvent::getChannelNibble -- return the bottom 4 bites of the data[0]
//      entry, or -1 if there is not data[0].  Should be refined to
//      return -1 if the top nibble is 0xf0, since those commands are
//      not channel specific.
//

int MidiFile::getChannel(int track, int index) {
   return MidiFile::getEvent(track, index).getChannelNibble();
}

int MidiFile::getChannelNibble(int track, int index) {
   return MidiFile::getEvent(track, index).getChannelNibble();
}

int MFEvent::getChannelNibble(void) {
   if (data.size() &lt; 1) {
      return -1;
   }
   return data[0] &amp; 0x0f;
}

int MFEvent::getChannel(void) {
   return MFEvent::getChannelNibble();
}

@@END:	FunctionDocumentation

