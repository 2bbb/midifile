@@BEGIN:	FunctionDocumentation
@CLASSNAME:	MidiFile
@METHOD:	readLittleEndian2Bytes
@ACCESS:	public
@STATIC:	true
@RETURN:	ushort
@PARAMETERS:	istream& input
@FILE:		MidiFile.cpp
@LINES:		2217-2234
@SEEALSO:	readLittleEndian4Bytes
@SHORTDESC:	Read two bytes from the input stream in little-endian format.
@LONGDESC:	Read two bytes from the input stream in little-endian format.
		This means that the first byte read will be the bottom byte
		in the output integer, and the second byte will be the
		top byte.

@@BEGIN: EXAMPLE
@DESCRIPTION:
@CODE:
@OUTPUT:
@@END:	EXAMPLE

@SRCCODE:

//////////////////////////////
//
// MidiFile::readLittleEndian2Bytes -- Read two bytes which are in
//       little-endian order (smallest byte is first).  Then flip
//       the order of the bytes to create the return value.
//

ushort MidiFile::readLittleEndian2Bytes(istream&amp; input) {
   uchar buffer[2] = {0};
   input.read((char*)buffer, 2);
   if (input.eof()) {
      cerr &lt;&lt; "Error: unexpected end of file." &lt;&lt; endl;
      exit(1);
   }
   return buffer[1] | (buffer[0] &lt;&lt; 8);
}

@@END:	FunctionDocumentation



