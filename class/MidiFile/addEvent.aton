@@BEGIN:	FunctionDocumentation
@CLASSNAME:	MidiFile
@METHOD:	addEvent
@ACCESS:	public
@RETURN:	int
@PARAMETERS:	int track, int time, vector<uchar>& data
@FILE:		MidiFile.cpp
@LINES:		1088-1104
@SEEALSO:	
@SHORTDESC:	Add a new MidiEvents to the end of the specified track.
@LONGDESC:	Create an MidiEvents and store at the end of the specified
		track's event list.  The return value is the index position
		of the event in the track list.  This index value may become
		invalid if the track is sorted.

@@BEGIN: EXAMPLE
@DESCRIPTION:
@CODE:
@OUTPUT:
@@END:	EXAMPLE

@SRCCODE:

//////////////////////////////
//
// MidiFile::addEvent --
//

int MidiFile::addEvent(int aTrack, int aTime, vector&lt;uchar&gt;&amp; midiData) {
   timemapvalid = 0;
   MidiEvent anEvent;
   anEvent.tick = aTime;
   anEvent.track = aTrack;
   anEvent.setMessage(midiData);

   events[aTrack]-&gt;push_back(anEvent);
   return events[aTrack]-&gt;size() - 1;
}

@@END:	FunctionDocumentation



