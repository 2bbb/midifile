@@BEGIN:	FunctionDocumentation
@CLASSNAME:	MidiFile
@METHOD:	addTrack
@ACCESS:	public
@RETURN:	int
@PARAMETERS:	void
@PARAMETERS:	int count
@FILE:		MidiFile.cpp
@LINES:		876-904
@SEEALSO:	
@SHORTDESC:	Added one or more empty tracks to the MidiFile.
@LONGDESC:	Adds a blank track at the end of the track list.
		Returns the track number of the added track.

@@BEGIN: EXAMPLE
@DESCRIPTION:
@CODE:
@OUTPUT:
@@END:	EXAMPLE

@SRCCODE:

//////////////////////////////
//
// MidiFile::addTrack -- adds a blank track at end of the
//    track list.  Returns the track number of the added
//    track.
//

int MidiFile::addTrack(void) {
   int length = getNumTracks();
   events.resize(length+1);
   events[length] = new vector&lt;MFEvent&gt;;
   events[length]-&gt;reserve(10000);
   events[length]-&gt;clear();
   return length;
}

int MidiFile::addTrack(int count) {
   int length = getNumTracks();
   events.resize(length+count);
   int i;
   for (i=0; i&lt;count; i++) {
      events[length + i] = new vector&lt;MFEvent&gt;;
      events[length + i]-&gt;reserve(10000);
      events[length + i]-&gt;clear();
   }
   return length + count - 1;
}

@@END:	FunctionDocumentation



