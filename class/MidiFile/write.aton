@@BEGIN:	FunctionDocumentation
@CLASSNAME:	MidiFile
@METHOD:	write
@ACCESS:	public
@RETURN:	int
@PARAMETERS:	const char* filename
@PARAMETERS:	const string& filename
@FILE:		MidiFile.cpp
@LINES:		1637-1671
@SEEALSO:	
@SHORTDESC:	Write a Standard MIDI file from the MidiFile contents.
@LONGDESC:	Write a Standard MIDI file from the MidiFile contents.

@@BEGIN: EXAMPLE
@DESCRIPTION:
@CODE:
@OUTPUT:
@@END:	EXAMPLE

@SRCCODE:

//////////////////////////////
//
// MidiFile::write -- write a standard MIDI file from data.
//

int MidiFile::write(const char* filename) {
   #ifndef OLDCPP
      #ifdef VISUAL
         fstream outputfile(filename, ios::out | ios::binary);
      #else
         fstream outputfile(filename, ios::out);
      #endif
   #else
      #ifdef VISUAL
         fstream outputfile(filename, ios::out | ios::noreplace | ios::binary);
      #else
         fstream outputfile(filename, ios::out | ios::noreplace);
      #endif
   #endif

   if (!outputfile.is_open()) {
      cout << "Error: could not write: " << filename << endl;
      exit(1);
   }
   int status = write(outputfile);
   outputfile.close();
   return status;
}


int MidiFile::write(const string& filename) {
   return MidiFile::write(filename.data());
}

@@END:	FunctionDocumentation



